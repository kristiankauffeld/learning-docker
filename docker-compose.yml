services:
  postgres-db:
    image: postgres
    container_name: postgres-db
    ports:
      - 4001:5432 #normally 5432:5432
    environment:
      POSTGRES_PASSWORD: postgres
      POSTGRES_USER: postgres
      POSTGRES_DB: postgres
    restart: always

  rabbit:
    image: rabbitmq:3.9.21-management
    healthcheck:
      test: ['CMD', 'rabbitmq-diagnostics', '-q', 'ping']
      interval: 30s
      timeout: 30s
      retries: 3
    container_name: rabbit
    ports:
      - '5672:5672'
      - '15672:15672'
    expose:
      - '5672'
      - '15672'
    restart: always

  fastapi-app:
    image: stem-separation
    build:
      context: ./stem-separation
      dockerfile: Dockerfile-dev
    container_name: stem-separation
    ports:
      - '8000:80'
    environment:
      RABBIT: amqp://guest:guest@rabbit:5672
      DB_URL: postgresql://postgres:postgres@postgres-db:5432/postgres
    volumes:
      - ./stem-separation/src:/app/src:z
    depends_on:
      rabbit:
        condition: service_healthy
      postgres-db:
        condition: service_started
    restart: 'no'

  song-upload:
    image: song-upload
    build:
      context: ./song-upload
      dockerfile: Dockerfile-dev
    container_name: song-upload
    volumes:
      - ./song-upload/src:/app/src:z
      - ./song-upload/songs:/app/songs:z
    ports:
      - '4000:80'
    environment:
      - PORT=80
      - RABBIT=amqp://guest:guest@rabbit:5672
    depends_on:
      - rabbit
    restart: 'no'
